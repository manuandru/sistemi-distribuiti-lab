/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

    implementation("commons-cli:commons-cli:1.4")
}

application {
    // Define the main class for the application.
    mainClass.set("it.unibo.jecho.Main")
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.getByName<JavaExec>("run") {
    standardInput = System.`in`
    val mode = project.findProperty("mode")

    if (mode == "uppercase" || mode == "u") {
        args("-u")
    } else if (mode == "lowercase" || mode == "l") {
        args("-l")
    }
}

tasks.create<JavaExec>("runUpper") {
    standardInput = System.`in`
    mainClass.set("it.unibo.jecho.Main")
    classpath = sourceSets.main.get().runtimeClasspath
    args("-u")
}

tasks.create<JavaExec>("runLower") {
    standardInput = System.`in`
    mainClass.set("it.unibo.jecho.Main")
    classpath = sourceSets.main.get().runtimeClasspath
    args("-l")
}
